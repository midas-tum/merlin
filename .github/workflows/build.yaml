name: merlin-build
on:
  pull_request:
    branches:
      - master
jobs:
  run:
    runs-on: [self-hosted,Linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Init environment
        run: |
          # Your ML workflow goes here
          python3 -m venv merlinenv
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          pip install --upgrade pip   # update pip to install TF>2.0
      - name: Clone gpuNUFFT
        run: |
           git clone --branch cuda_streams https://github.com/khammernik/gpuNUFFT.git
      - name: Build gpuNUFFT
        env:
          CUDA_ROOT_DIR: /usr/local/cuda
          CUDA_SDK_ROOT_DIR: /usr/local/cuda-samples
          LDFLAGS: -L/usr/local/cuda/lib64
        run: |
           cd gpuNUFFT/CUDA
           mkdir -p build
           cd build
           cmake .. -DGEN_MEX_FILES=OFF
           make
      - name: Clone optox
        uses: actions/checkout@v2
        with:
          repository: midas-tum/optox_dev
          token: ${{ secrets.OPTOX_TOKEN }}
          path: optox
      - name: Build optox
        env:
          CUDA_ROOT_DIR: /usr/local/cuda
          CUDA_SDK_ROOT_DIR: /usr/local/cuda-samples
          GPUNUFFT_ROOT_DIR: ~/actions-runner-merlin/_work/merlin/merlin/gpuNUFFT
          LDFLAGS: -L/usr/local/cuda/lib64
        run: |
          # Your ML workflow goes here      
          cd ~/actions-runner-merlin/_work/merlin/merlin/optox
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          pip install -r requirements.txt
          mkdir build
          cd build
          cmake .. -DWITH_PYTHON=ON -DWITH_PYTORCH=ON -DWITH_TENSORFLOW=ON -DWITH_GPUNUFFT=ON -DCUDA_SDK_ROOT_DIR=/usr/local/cuda-samples -DCUDA_ROOT=/usr/local/cuda/
          make install
      - name: Build merlin 
        run: |
          cd ~/actions-runner-merlin/_work/merlin/merlin
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          ./install.sh
      - name: Check install
        run: |
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          pip list
      - name: Run python unittests
        run: |
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          python3 -m unittest discover -v merlinpy.test >> results_py.txt
      - name: Run pytorch unittests
        run: |
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          python3 -m unittest discover -v merlinth.test >> results_th.txt
      - name: Run tensorflow unittests
        run: |
          source ~/actions-runner-merlin/_work/merlin/merlin/merlinenv/bin/activate
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib64
          python3 -m unittest discover -v merlintf.test >> results_tf.txt
      #- name: Publish Unit Test Results
      #  uses: EnricoMi/publish-unit-test-result-action@v1
      #  if: always()
      #  with:
      #    files: test-results/**/*.xml
      - name: Cleanup
        run: |
          rm -r ~/actions-runner-merlin/_work/merlin/merlin/merlinenv
